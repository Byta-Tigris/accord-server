# Generated by Django 3.2.8 on 2021-12-13 10:02

import accounts.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_cryptography.fields
import utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.CharField(default='', max_length=64, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(default=utils.get_current_time)),
                ('entity_type', models.CharField(default='', max_length=20)),
                ('is_disabled_account', models.BooleanField(default=False)),
                ('contact', models.CharField(default='', max_length=14)),
                ('username', models.CharField(db_index=True, default='', max_length=25, unique=True)),
                ('description', models.TextField(default='')),
                ('avatar', models.URLField(default='')),
                ('banner_image', models.URLField(default='')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_account_relation', to=settings.AUTH_USER_MODEL)),
            ],
            bases=(models.Model, accounts.models.AccountInterface),
        ),
        migrations.CreateModel(
            name='SocialMediaHandle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(db_index=True, default='', max_length=20)),
                ('handle_url', models.URLField()),
                ('handle_uid', models.CharField(db_index=True, default='', max_length=255)),
                ('access_token', django_cryptography.fields.encrypt(models.TextField(default=''))),
                ('refresh_token', django_cryptography.fields.encrypt(models.TextField(default=''))),
                ('is_refresh_token_dependent', models.BooleanField(default=False)),
                ('token_expiration_time', models.DateTimeField(default=utils.get_current_time)),
                ('created_on', models.DateTimeField(default=utils.get_current_time)),
                ('username', models.CharField(default='', max_length=70)),
                ('avatar', models.URLField(blank=True, null=True)),
                ('is_publish_permission_valid', models.BooleanField(default=False)),
                ('rates', models.JSONField(default=dict)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_handle_account', to='accounts.account')),
            ],
        ),
        migrations.CreateModel(
            name='YoutubeHandleMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=utils.get_current_time)),
                ('expired_on', models.DateTimeField(default=utils.get_handle_metrics_expire_time)),
                ('impression_data', models.JSONField(default=dict)),
                ('engagement_data', models.JSONField(default=dict)),
                ('audience_gender_data', models.JSONField(default=dict)),
                ('audience_age_data', models.JSONField(default=dict)),
                ('audience_country_data', models.JSONField(default=dict)),
                ('followers_count_data', models.JSONField(default=dict)),
                ('media_count', models.PositiveIntegerField(default=0)),
                ('last_metric_expired_on', models.DateTimeField(default=utils.get_current_time)),
                ('platform', models.CharField(default='youtube', max_length=10)),
                ('comments_count_data', models.JSONField(default=dict)),
                ('likes_count_data', models.JSONField(default=dict)),
                ('dislikes_count_data', models.JSONField(default=dict)),
                ('shares_count_data', models.JSONField(default=dict)),
                ('average_view_percentage_data', models.JSONField(default=dict)),
                ('positive_engagement_data', models.JSONField(default=dict)),
                ('negative_engagement_data', models.JSONField(default=dict)),
                ('handle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.socialmediahandle')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InstagramHandleMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=utils.get_current_time)),
                ('expired_on', models.DateTimeField(default=utils.get_handle_metrics_expire_time)),
                ('impression_data', models.JSONField(default=dict)),
                ('engagement_data', models.JSONField(default=dict)),
                ('audience_gender_data', models.JSONField(default=dict)),
                ('audience_age_data', models.JSONField(default=dict)),
                ('audience_country_data', models.JSONField(default=dict)),
                ('followers_count_data', models.JSONField(default=dict)),
                ('media_count', models.PositiveIntegerField(default=0)),
                ('last_metric_expired_on', models.DateTimeField(default=utils.get_current_time)),
                ('platform', models.CharField(default='instagram', max_length=10)),
                ('reach_data', models.JSONField(default=dict)),
                ('profile_views_data', models.JSONField(default=dict)),
                ('audience_city', models.JSONField(default=dict)),
                ('handle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.socialmediahandle')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
